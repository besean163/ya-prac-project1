// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/metricSaverService.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	metrics "ya-prac-project1/internal/metrics"

	gomock "github.com/golang/mock/gomock"
)

// MockSaveStorage is a mock of SaveStorage interface.
type MockSaveStorage struct {
	ctrl     *gomock.Controller
	recorder *MockSaveStorageMockRecorder
}

// MockSaveStorageMockRecorder is the mock recorder for MockSaveStorage.
type MockSaveStorageMockRecorder struct {
	mock *MockSaveStorage
}

// NewMockSaveStorage creates a new mock instance.
func NewMockSaveStorage(ctrl *gomock.Controller) *MockSaveStorage {
	mock := &MockSaveStorage{ctrl: ctrl}
	mock.recorder = &MockSaveStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSaveStorage) EXPECT() *MockSaveStorageMockRecorder {
	return m.recorder
}

// CreateMetrics mocks base method.
func (m *MockSaveStorage) CreateMetrics(arg0 []metrics.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMetrics", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMetrics indicates an expected call of CreateMetrics.
func (mr *MockSaveStorageMockRecorder) CreateMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMetrics", reflect.TypeOf((*MockSaveStorage)(nil).CreateMetrics), arg0)
}

// GetMetrics mocks base method.
func (m *MockSaveStorage) GetMetrics() []metrics.Metrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics")
	ret0, _ := ret[0].([]metrics.Metrics)
	return ret0
}

// GetMetrics indicates an expected call of GetMetrics.
func (mr *MockSaveStorageMockRecorder) GetMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockSaveStorage)(nil).GetMetrics))
}

// UpdateMetrics mocks base method.
func (m *MockSaveStorage) UpdateMetrics(arg0 []metrics.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetrics", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetrics indicates an expected call of UpdateMetrics.
func (mr *MockSaveStorageMockRecorder) UpdateMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetrics", reflect.TypeOf((*MockSaveStorage)(nil).UpdateMetrics), arg0)
}
